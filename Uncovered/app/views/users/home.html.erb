<body class="homeBackground">
			<p style="color:skyblue"> <b> Welcome <%= current_user.username %>! <b> </p>
    	
    	
		
		

			<% if current_user.role == "admin" %>
					

				<center> <h2 style = "color:red"> VIEWING AS ADMIN </h2> </center>

		
				<% users_posts = [] %>
				
				<% @users.each do |user|%>
						
					<% user.pictures.each do |post| %> <!-- ORDERS BY TIME USER ACCOUNT WAS CREATED -->
						
						<%users_posts.push post%>

					<%end%>
				<%end%>

					<h3 class="white"> ALL POSTS: </h3>
						
						<%update = []%>
					
						<% users_posts.each do |ordered_post|%>
							<%update.push ordered_post%>

							
						<%end%>

						<%update.sort_by(&:created_at).reverse.each do |actual_post|%>
								<div class = "nobr white">
									<p> This post belongs to 
										<%= link_to "#{User.find(actual_post.user_id).username}", 
													"/pictures/#{actual_post.user_id}" %> 
									</p>
									
									<p> Caption: <%= actual_post.caption%> </p>

									<p> Location: <%= actual_post.location%> </p>
								
									<p> Created: <%= actual_post.created_at.strftime("%b. %d, %Y") %>
								
									<br>
									<br>
									 <%= image_tag actual_post.image.url(:regular) %>
									 <br>
								 
								</div>
						<%end%>





			
<%else%>
			
				<% users_posts = [] %>
				
				<% @users.each do |user|%>
						
					<% user.pictures.each do |post| %> <!-- ORDERS BY TIME USER ACCOUNT WAS CREATED -->
						
						<%users_posts.push post%>

					<%end%>
				<%end%>

						<%update = []%>

						<% users_posts.each do |ordered_post|%>
							<%update.push ordered_post%>
							
							
						<%end%>
						

	<div class = "container">
		<div class = "row">
			
			
			
			<div class = "col-sm-6">
				<% collapse_counter = 0 %>
				<% modal_counter = 1000 %>
						<%update.sort_by(&:created_at).reverse.each do |actual_post|%>
							

							
								<div class = "row homePosts">
									<div class = "col-sm-12 centerThis">
									
											
										
											 <p class="adjustPicture"> <%= image_tag actual_post.image.url(:large), :class => "unCenter" %> </p>

												<button type="button" class="btn btn-primary" data-toggle="collapse" data-target="#<%= collapse_counter%>" aria-expanded="false" aria-controls="collapseExample">
												  Post Details
												</button>

												

												

												<!-- 	---------------------------------------------MODAL-------------------------------------
 -->
												<div class="modal fade <%=modal_counter%>" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
  		
  													<div class="modal-dialog modal-lg" role="document">
    													<div class="modal-content"> 
    														<h4 class="modal-title" id="myModalLabel"> Post Details </h4>

    														<div class="row">
																
																<div class="col-sm-6"> 
																	<p> This post belongs to <%=User.find(actual_post.user_id).username %> </p>
												    				<p> Caption: <%= actual_post.caption%> </p>
										
																	<p> Location: <%= actual_post.location%> </p>
										
																	<p> Created: <%= actual_post.created_at.strftime("%b. %d, %Y") %>
													
									 							
																</div>
																
																<div class="col-sm-6">
																<%= image_tag actual_post.image.url(:regular) %>
																</div>

															</div>
										    			</div>
										  			</div>
												</div>



<!--  		----------------------------------END-------------------------------------------------------------
 -->

												
												<div class="collapse" id="<%= collapse_counter%>">
												  <div class="well">
													
													<% @pic = actual_post.image%>
												  <p> User: <%=User.find(actual_post.user_id).username.capitalize %>
												    <p> Caption: <%= actual_post.caption%> </p>
										
													<p> Created: <%= actual_post.created_at.strftime("%b. %d, %Y") %>

													<p> Location: <%= actual_post.location%> </p>
									 				
											
												  </div> <!-- POST INFORMATION -->
												</div> <!-- BUTTON FOR POST INFORMATION -->
									
												<%collapse_counter+=1%>
												<%modal_counter+=1%>
											 
									</div> 
								</div>
							<br> 
							<br>
							<br> 
							<br>
						<%end%>

			</div>	<!-- COLUMN OUT -->	

			<div class = "col-sm-6 googleMaps">
				

				<!-- -------------------GOOGLE MAPS------------------ -->

					<!DOCTYPE html>
<html>
  <head>
    <title>Place Autocomplete</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <style>
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #map {
        height: 78vh;
      }
      .controls {
        margin-top: 10px;
        border: 1px solid transparent;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        height: 32px;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
      }
      #origin-input,
      #destination-input {
        background-color: #fff;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        margin-left: 12px;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 200px;
      }
      #origin-input:focus,
      #destination-input:focus {
        border-color: #4d90fe;
      }
      #mode-selector {
        color: #fff;
        background-color: #4d90fe;
        margin-left: 12px;
        padding: 5px 11px 0px 11px;
      }
      #mode-selector label {
        font-family: Roboto;
        font-size: 13px;
        font-weight: 300;
      }
    </style>
  </head>
  <body>
    <input id="origin-input" class="controls" type="text"
        placeholder="Enter an origin location">
    <input id="destination-input" class="controls" type="text"
        placeholder="Enter a destination location">
    <div id="mode-selector" class="controls">
      <input type="radio" name="type" id="changemode-walking" checked="checked">
      <label for="changemode-walking">Walking</label>
      <input type="radio" name="type" id="changemode-transit">
      <label for="changemode-transit">Transit</label>
      <input type="radio" name="type" id="changemode-driving">
      <label for="changemode-driving">Driving</label>
    </div>
    <div id="map"></div>
    <script>
    
      function initMap() {
        var origin_place_id = null;
        var destination_place_id = null;
        var travel_mode = 'WALKING';
        var map = new google.maps.Map(document.getElementById('map'), {
          mapTypeControl: false,
          center: {lat: 26.0112,lng: -80.1495},
          zoom: 12
        });
        var directionsService = new google.maps.DirectionsService;
        var directionsDisplay = new google.maps.DirectionsRenderer;
        directionsDisplay.setMap(map);
        var origin_input = document.getElementById('origin-input');
        var destination_input = document.getElementById('destination-input');
        var modes = document.getElementById('mode-selector');
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(origin_input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(destination_input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(modes);
        var origin_autocomplete = new google.maps.places.Autocomplete(origin_input);
        origin_autocomplete.bindTo('bounds', map);
        var destination_autocomplete =
            new google.maps.places.Autocomplete(destination_input);
        destination_autocomplete.bindTo('bounds', map);
        // Sets a listener on a radio button to change the filter type on Places
        // Autocomplete.
        function setupClickListener(id, mode) {
          var radioButton = document.getElementById(id);
          radioButton.addEventListener('click', function() {
            travel_mode = mode;
          });
        }
        setupClickListener('changemode-walking', 'WALKING');
        setupClickListener('changemode-transit', 'TRANSIT');
        setupClickListener('changemode-driving', 'DRIVING');
        function expandViewportToFitPlace(map, place) {
          if (place.geometry.viewport) {
            map.fitBounds(place.geometry.viewport);
          } else {
            map.setCenter(place.geometry.location);
            map.setZoom(11);
          }
        }
        origin_autocomplete.addListener('place_changed', function() {
          var place = origin_autocomplete.getPlace();
          if (!place.geometry) {
            window.alert("The place contains no geometry");
            return;
          }
          expandViewportToFitPlace(map, place);
          // If the place has a geometry, store its place ID and route if we have
          // the other place ID
          origin_place_id = place.place_id;
          route(origin_place_id, destination_place_id, travel_mode,
                directionsService, directionsDisplay);
        });
        destination_autocomplete.addListener('place_changed', function() {
          var place = destination_autocomplete.getPlace();
          if (!place.geometry) {
            window.alert("The place contains no geometry");
            return;
          }
          expandViewportToFitPlace(map, place);
          // If the place has a geometry, store its place ID and route if we have
          // the other place ID
          destination_place_id = place.place_id;
          route(origin_place_id, destination_place_id, travel_mode,
                directionsService, directionsDisplay);
        });
        function route(origin_place_id, destination_place_id, travel_mode,
                       directionsService, directionsDisplay) {
          if (!origin_place_id || !destination_place_id) {
            return;
          }
          directionsService.route({
            origin: {'placeId': origin_place_id},
            destination: {'placeId': destination_place_id},
            travelMode: travel_mode
          }, function(response, status) {
            if (status === 'OK') {
              directionsDisplay.setDirections(response);
            } else {
              window.alert('Your request failed due to ' + status);
            }
          });
        }
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB5YqlXTduZxNfzKSKeqlRQiWFjeaspQVo&libraries=places&callback=initMap"
        async defer></script>
  </body>
</html> 
					

			</div>	<!-- -------------------END---------------------- -->

		</div> <!-- ROW OUT
    </div> <! CONTAINER OUT -->


<%end%>

</body>


